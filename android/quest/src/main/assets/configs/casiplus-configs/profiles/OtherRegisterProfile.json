{
  "appId": "app",
  "configType": "profile",
  "id": "otherRegistersProfile",
  "fhirResource": {
    "baseResource": {
      "resource": "Patient"
    },
    "relatedResources": [
      {
        "resource": "CarePlan",
        "searchParameter": "subject"
      },
      {
        "resource": "Task",
        "searchParameter": "subject",
        "sortConfigs": [
          {
            "paramName": "period",
            "dataType": "DATE"
          }
        ]
      }
    ]
  },
  "secondaryResources": [
    {
      "baseResource": {
        "id": "commodities",
        "resource": "Group",
        "dataQueries": [
          {
            "paramName": "code",
            "filterCriteria": [
              {
                "dataType": "CODEABLECONCEPT",
                "value": {
                  "system": "http://snomed.info/sct",
                  "code": "386452003"
                }
              }
            ]
          }
        ]
      },
      "relatedResources": [
        {
          "id": "stockObservations",
          "resource": "Observation",
          "searchParameter": "subject"
        },
        {
          "id": "stockOutFlags",
          "resource": "Flag",
          "searchParameter": "subject"
        }
      ]
    }
  ],
  "rules": [
    {
      "name": "patientFirstName",
      "condition": "true",
      "actions": [
        "data.put('patientFirstName', fhirPath.extractValue(Patient, \"Patient.name[0].select(given[0])\"))"
      ]
    },
    {
      "name": "patientLastName",
      "condition": "true",
      "actions": [
        "data.put('patientLastName', fhirPath.extractValue(Patient, \"Patient.name[0].select(family)\"))"
      ]
    },
    {
      "name": "patientName",
      "condition": "true",
      "actions": [
        "data.put('patientName', data.get('patientFirstName') + ' ' +  ' ' + data.get('patientLastName'))"
      ]
    },
    {
      "name": "patientActive",
      "condition": "true",
      "actions": [
        "data.put('patientActive', fhirPath.extractValue(Patient, 'Patient.active'))"
      ]
    },
    {
      "name": "patientTextColor",
      "condition": "true",
      "actions": [
        "data.put('patientTextColor', Patient.active ? '#000000' : 'DefaultColor')"
      ]
    },
    {
      "name": "patientId",
      "condition": "true",
      "actions": [
        "data.put('patientId', fhirPath.extractValue(Patient, 'Patient.id'))"
      ]
    },
    {
      "name": "patientAge",
      "condition": "true",
      "actions": [
        "data.put('patientAge', service.extractAge(Patient))"
      ]
    },
    {
      "name": "patientGender",
      "condition": "true",
      "actions": [
        "data.put('patientGender', service.extractGender(Patient))"
      ]
    },
    {
      "name": "patientDOB",
      "condition": "true",
      "actions": [
        "data.put('patientDOB', service.extractDOB(Patient, 'dd MM'))"
      ]
    },
    {
      "name": "isChild",
      "condition": "true",
      "actions": [
        "data.put('isChild', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate >= today() - 5 'years')\"))"
      ]
    },
    {
      "name": "canBearChild",
      "condition": "true",
      "actions": [
        "data.put('canBearChild',  fhirPath.extractValue(Patient, \"Patient.active and Patient.gender = 'female' and ((Patient.birthDate <= today() - 15 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isEligibleForFP",
      "condition": "true",
      "actions": [
        "data.put('isEligibleForFP',  fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 15 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isChildUnder2months",
      "condition": "true",
      "actions": [
        "data.put('isChildUnder2months', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate > today() - 2 'months')\"))"
      ]
    },
    {
      "name": "isChildOver2months",
      "condition": "true",
      "actions": [
        "data.put('isChildOver2months', fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 2 'months') and (Patient.birthDate >= today() - 5 'years'))\"))"
      ]
    }
  ],
  "views": [
    {
      "viewType": "COLUMN",
      "children": [
        {
          "viewType": "CARD",
          "padding": 0,
          "content": [
            {
              "viewType": "COLUMN",
              "children": [
                {
                  "viewType": "COMPOUND_TEXT",
                  "primaryText": "@{patientName}",
                  "primaryTextColor": "#000000"
                },
                {
                  "viewType": "COMPOUND_TEXT",
                  "primaryText": "ID: #000121",
                  "primaryTextColor": "#000000"
                },
                {
                  "viewType": "SPACER",
                  "height": 10
                },
                {
                  "viewType": "PERSONAL_DATA",
                  "personalDataItems": [
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "Sex",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientGender}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    },
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "Age",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientAge}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    },
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "DOB",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientDOB}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "viewType": "SPACER",
          "height": 8
        },
        {
          "viewType": "CARD",
          "padding": 16,
          "header": {
            "viewType": "COMPOUND_TEXT",
            "primaryText": "VISITS",
            "primaryTextColor": "#6F7274",
            "fontSize": 18,
            "padding": 16
          },
          "content": [
            {
              "viewType": "LIST",
              "resources": [
                {
                  "id": "tasks",
                  "relatedResourceId": "Task",
                  "resourceType": "Task"
                }
              ],
              "registerCard": {
                "rules": [
                  {
                    "name": "taskStatus",
                    "condition": "true",
                    "actions": [
                      "data.put('taskStatus', fhirPath.extractValue(Task, 'Task.status'))"
                    ]
                  },
                  {
                    "name": "taskExecutionStartDate",
                    "condition": "true",
                    "actions": [
                      "data.put('taskExecutionStartDate', fhirPath.extractValue(Task, 'Task.executionPeriod.start'))"
                    ]
                  },
                  {
                    "name": "taskPeriodDueDate",
                    "condition": "true",
                    "actions": [
                      "data.put('taskPeriodDueDate', service.formatDate(data.get('taskExecutionStartDate'), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"dd MMM yyyy\"))"
                    ]
                  },
                  {
                    "name": "taskDescription",
                    "condition": "true",
                    "actions": [
                      "data.put('taskDescription', fhirPath.extractValue(Task, 'Task.description'))"
                    ]
                  },
                  {
                    "name": "taskDescriptionWithStartDate",
                    "condition": "true",
                    "priority": 2,
                    "actions": [
                      "data.put('taskDescriptionWithStartDate', data.get('taskDescription') + ' ' + 'due on' + ' ' + data.get('taskPeriodDueDate'))"
                    ]
                  },
                  {
                    "name": "taskId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskId', fhirPath.extractValue(Task, 'Task.id'))"
                    ]
                  },
                  {
                    "name": "taskFor",
                    "condition": "true",
                    "actions": [
                      "data.put('taskFor', fhirPath.extractValue(Task, 'Task.for.reference'))"
                    ]
                  },
                  {
                    "name": "taskQuestionnaireId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskQuestionnaireId', fhirPath.extractValue(Task, 'Task.reasonReference.reference'))"
                    ]
                  }
                ],
                "views": [
                  {
                    "viewType": "BUTTON",
                    "text": "taskDescriptionWithStartDate",
                    "status": "#2d6387",
                    "visible": "true",
                    "enabled": "true",
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "34343434",
                          "title": "taskDescription",
                          "saveButtonText": "Save"
                        },
                        "params": [
                          {
                            "paramType": "QUESTIONNAIRE_RESPONSE_POPULATION_RESOURCE",
                            "resourceType": "Patient",
                            "value": "patientId",
                            "key": "resourcePatient",
                            "dataType": "STRING"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "overFlowMenuItems": [
    {
      "title": "Registration info",
      "titleColor": "#000000",
      "visible": "true",
      "enabled": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "e5155788-8831-4916-a3f5-486915ce34b2",
            "title": "Member registration info",
            "saveButtonText": "Update registration",
            "setPractitionerDetails": true,
            "setOrganizationDetails": true
          }
        }
      ]
    },
    {
      "title": "Record as Sick",
      "titleColor": "#000000",
      "visible": "true",
      "enabled": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "3276f55c-b25e-455b-ae4e-8846fb8fd039",
            "title": "Record sick child"
          }
        }
      ]
    },
    {
      "title": "Record as Sick",
      "titleColor": "#000000",
      "visible": "true",
      "enabled": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "58fbddae-c5a0-4b86-832e-f516c96f3b85",
            "title": "Record sick child"
          }
        }
      ]
    },
    {
      "title": "Register Pregnancy",
      "titleColor": "#000000",
      "visible": "true",
      "enabled": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "9b22f3ed-e7e1-4222-bf72-1ced42696189",
            "title": "Record to ANC"
          }
        }
      ]
    }
  ]
}